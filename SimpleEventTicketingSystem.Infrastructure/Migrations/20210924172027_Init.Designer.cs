// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleEventTicketingSystem.Infrastructure.Persistence;

namespace SimpleEventTicketingSystem.Infrastructure.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20210924172027_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("SimpleEventTicketingSystem.Domain.Entity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Entity");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Entity");
                });

            modelBuilder.Entity("SimpleEventTicketingSystem.Domain.Event", b =>
                {
                    b.HasBaseType("SimpleEventTicketingSystem.Domain.Entity");

                    b.Property<int>("TicketPoolPoolCapacity")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Event");
                });

            modelBuilder.Entity("SimpleEventTicketingSystem.Domain.Ticket", b =>
                {
                    b.HasBaseType("SimpleEventTicketingSystem.Domain.Entity");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("char(36)");

                    b.HasIndex("EventId");

                    b.HasDiscriminator().HasValue("Ticket");
                });

            modelBuilder.Entity("SimpleEventTicketingSystem.Domain.Ticket", b =>
                {
                    b.HasOne("SimpleEventTicketingSystem.Domain.Event", null)
                        .WithMany("Tickets")
                        .HasForeignKey("EventId");
                });

            modelBuilder.Entity("SimpleEventTicketingSystem.Domain.Event", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
